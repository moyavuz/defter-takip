enum GorevDurumu {
    BEKLIYOR, HAZIR, CALISILIYOR, TAMAMLANDI
}

enum MedeniHali {
    BEKAR, EVLI
}
enum IscilikDurumu {
    BEKLIYOR, BEKLIYOR_MALZEME, BEKLIYOR_RUHSAT, CALISILIYOR, TAMAMLANDI, TAMAMLANDI_EKSIK_VAR
}
enum OnemDurumu{
	ACIL,IVEDI,NORMAL
}

enum CalismaTuru {
    MAASLI,GOTURU,YEVMIYE,TASERE,GECICI
}

entity Calisan {
	tckimlikno Long required,
	ad String required minlength(2),
    telefon String,
	eposta String,
    calismaTuru CalismaTuru,
    ucret BigDecimal,
    iban String,
    medeniHali MedeniHali,
	dogumTarihi LocalDate,
	girisTarihi LocalDate,
    cikisTarihi LocalDate
}

entity Ekip {
    ad String required minlength(2),
    telefon String ,
    eposta String,
    calismaTuru CalismaTuru
}

entity MalzemeTakip {
	miktar Long required,
	aciklama TextBlob,
    tarih LocalDate
}

entity Unvan {
    ad String required,
    aciklama String
}

entity Birim {
    ad String required,
    aciklama String,
    kisaltma String,
    carpan Long
}

entity ProjeTuru {
    ad String required,
    aciklama String,
    kisaltma String
}

entity MalzemeGrubu {
    ad String required,
    aciklama String
}

entity Malzeme {
    ad String required,
    aciklama String,
    kisaltma String,
    fiyatMaliyet BigDecimal
}

entity Poz {
    ad String required,
    aciklama String,
    kisaltma String,
    yil Integer,
    fiyatTelekom BigDecimal,
    fiyatGirisim BigDecimal,
    fiyatTaseron BigDecimal,
    fiyatTasere BigDecimal,
    kdvOran Double,
    malzemeMi Boolean
}

entity Bolge {
	ad String required,
	adres String
}

entity Proje {
	ad String required,
	onemDurumu OnemDurumu,
    aciklama String,
  	durumu GorevDurumu,	
	tarih LocalDate,
    detay TextBlob,
	dosya Blob,
	baslamaTarihi LocalDate,
    bitisTarihi LocalDate
}

entity Iscilik {
	ad String,
	aciklama String,
    detay TextBlob,
    durumu IscilikDurumu,
	resim Blob
}

entity IscilikDetay {
	miktar Long required
}

//iliskiler
 
relationship OneToMany {
  Ekip to Iscilik{ekip(ad)},
  Proje to Iscilik{proje(ad)} ,
  Iscilik to IscilikDetay{iscilik},
  Poz to IscilikDetay{poz(ad)}
  }
  
relationship OneToMany {
  Ekip to MalzemeTakip{ekip(ad)},
  Malzeme to MalzemeTakip{malzeme(ad)}
}

relationship ManyToOne {
	Calisan{yonetici(ad)} to Calisan,
    Bolge{bolgeSorumlu(ad)} to Calisan,
    Ekip{ekipSorumlu(ad)} to Calisan,
    Ekip{bolge(ad)} to Bolge,
    Calisan{unvan(ad)} to Unvan,
    Proje{turu(ad)} to ProjeTuru,
    Proje{bolge(ad)} to Bolge,
    Malzeme{birim(ad)} to Birim,
    Poz{birim(ad)} to Birim
}
relationship ManyToMany {
	MalzemeGrubu{malzemeListesi(ad)} to Malzeme{grup},
    Ekip{ekipCalisan(ad)} to Calisan{ekip}
}

// Set pagination options
paginate Iscilik, Poz, IscilikDetay with infinite-scroll
paginate Calisan, Malzeme, Proje, MalzemeTakip with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix

